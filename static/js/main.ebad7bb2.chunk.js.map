{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","components/item-add-form/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemsProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebad7bb2.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\n\nexport default AppHeader;\n","import React from 'react';\n\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} tasks to do, {done} done</h2>\n    </div>\n  );\n};\n\n\nexport default AppHeader;","import SearchPanel from './search-panel';\n\n\nexport default SearchPanel;","import React, { Component } from 'react';\n\nimport './search-panel.css';\n\n\nexport default class SearchPanel extends Component {\n\n  state = {\n    term: ''\n  };\n\n  onSearchChange = (e) => {\n    const term = e.target.value;\n    this.setState({ term });\n    this.props.onSearchChange(term);\n  };\n\n  render() {\n    return(\n      <input  type=\"text\"\n            className=\"form-control search-input\"\n            placeholder=\"type to search\" \n            value={this.state.term}\n            onChange={this.onSearchChange}\n      />\n    );\n  }\n}\n","import TodoListItem from './todo-list-item';\n\n\nexport default TodoListItem;","import React, { Component } from 'react';\n\nimport './todo-list-item.css';\n\n\nexport default class TodoListItem extends Component {\n\n  render() {\n    const { label, onDeleted,\n            onToggleImportant,\n            onToggleDone,\n            important, done } = this.props;\n\n    let classNames = \"todo-list-item\";\n    if (done) {\n      classNames += ' done';\n    }\n\n    if (important) {\n      classNames += ' important';\n    }\n  \n    return (\n      <span className={classNames}>\n        <span \n          className=\"todo-list-item-label\"\n          onClick={ onToggleDone }>\n          {label}\n        </span>     \n      \n  \n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\" \n                onClick={ onToggleImportant }>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted} >\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  };\n}\n\n","import TodoList from './todo-list';\n\n\nexport default TodoList;","import React from 'react';\nimport TodoListItem from '../todo-list-item';\n\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted,\n                    onToggleImportant,\n                    onToggleDone }) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemsProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem \n          { ...itemsProps }\n          onDeleted={() => onDeleted(id)} \n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n        />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\n\n\nexport default ItemStatusFilter;","import React, { Component } from 'react';\n\nimport './item-status-filter.css';\n\n\n\nexport default class ItemStatusFilter extends Component {\n\n  buttons = [\n    {name: 'all', label: 'All'},\n    {name: 'active', label: 'Active'},\n    {name: 'done', label: 'Done'},\n  ];\n\n  render () {\n\n    const { filter, onFilterChange } = this.props;\n    const buttons = this.buttons.map(({name, label}) => {\n      const isActive = filter === name;\n      const clazz = isActive ? \"btn-info\" : \"btn-outline-secondary\";\n      return (\n        <button type=\"button\"\n                className={`btn ${clazz}`}\n                key={name}\n                onClick={() => onFilterChange(name)}>\n          {label}\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  };\n}\n\n\n\n","import React, { Component } from 'react';\n\n\nexport default class ItemAddForm extends Component {\n\n  state = {\n    label: ''\n  };\n\n  onLabelChange = (e) => {\n    this.setState({\n      label: e.target.value\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({\n      label: ''\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"item-add-form d-flex\"\n            onSubmit={this.onSubmit}>\n\n        <input type=\"text\" \n                className=\"form-control\"\n                onChange={this.onLabelChange}\n                placeholder=\"What needs to be done\"\n                value={this.state.label}\n        />\n        <button className=\"btn btn-outline-secondary\" >\n          Add&nbsp;Item\n        </button>\n      </form>\n    )\n  }\n}","import ItemAddForm from './item-add-form';\n\nimport './item-add-form.css';\n\n\n\nexport default ItemAddForm;","import App from './app';\n\n\nexport default App;","import React, { Component } from 'react';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\nimport './app.css';\n\nexport default class App extends Component {\n\n  maxId = 10;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Study html & css'),\n      this.createTodoItem('Study javascript'),\n      this.createTodoItem('Study react js'),\n      this.createTodoItem('Prepare a cv'),\n      this.createTodoItem('Find a job')\n    ],\n    term: '',\n    filter: 'all' // active, all, done\n  };\n\n  createTodoItem(label) {\n    return {\n        label,\n        important: false,\n        done: false,\n        id: this.maxId++\n    }\n  }\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n\n      // [a, b, c, d, e]\n      // [a, b,    d, e]\n      // const before = todoData.slice(0, idx);\n      // const after = todoData.slice(idx + 1);\n      // const newArray = [...before, ...after];\n\n      const newArray = [\n        ...todoData.slice(0, idx),\n        ...todoData.slice(idx + 1)\n      ];\n\n      return {\n        todoData: newArray\n      };\n    });\n  };\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n\n      const newArr = [\n        ...todoData,\n        newItem\n      ];\n\n      return {\n        todoData: newArr\n      };\n    });\n  };\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex((el) => el.id === id);\n\n      // update object\n      const oldItem = arr[idx];\n      const newItem = {...oldItem,\n          [propName]: !oldItem[propName]};\n\n      // construct new array\n      return [\n        ...arr.slice(0, idx),\n        newItem,\n        ...arr.slice(idx + 1)\n      ];\n  }\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'done')\n      };\n    });  \n  };\n\n  onToggleImportant = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, 'important')\n      };\n    });\n  };\n\n  onSearchChange = (term) => {\n    this.setState({ term });\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  search(items, term) {\n    if(term.length === 0) {\n      return items;\n    }\n\n    return items.filter((item) => {\n      return item.label\n          .toLowerCase()\n          .indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n  filter (items, filter) {\n    switch(filter) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter((item) => !item.done);\n      case 'done':\n        return items.filter((item) => item.done);\n      default:\n        return items;\n    }\n  }\n\n\n\n  render() {\n    const { todoData, term, filter } = this.state;\n    const visibleItems = this.filter(this.search(todoData, term), filter);\n\n    const doneCount = todoData.filter((el) => el.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount}/>\n        <div className=\"top-panel d-flex\">\n          <SearchPanel \n            onSearchChange={this.onSearchChange}/>\n          <ItemStatusFilter \n            filter={filter}\n            onFilterChange={this.onFilterChange}/>\n        </div>\n  \n        <TodoList \n          todos={visibleItems} \n          onDeleted={ this.deleteItem } \n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone}\n        />\n\n        <ItemAddForm onItemAdded={this.addItem} />\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}